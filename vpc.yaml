AWSTemplateFormatVersion: "2010-09-09"
Description: ""

Parameters:
  AmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64'

Resources:
  EC2VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: cloud-asm1-vpc

  EC2InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: cloud-asm1-igw

  EC2VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    DependsOn:
      - EC2InternetGateway
      - EC2VPC
    Properties:
      InternetGatewayId: !Ref EC2InternetGateway
      VpcId: !Ref EC2VPC

  ###########
  # Public Route Table
  ###########

  EC2RouteTable2:
    Type: AWS::EC2::RouteTable
    DependsOn: EC2VPC
    Properties:
      VpcId: !Ref EC2VPC
      Tags:
        - Key: Name
          Value: !Sub cloud-asm1-rtb-public1-${AWS::Region}b

  EC2Route:
    Type: AWS::EC2::Route
    DependsOn:
      - EC2RouteTable2
      - EC2VPCGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref EC2InternetGateway
      RouteTableId: !Ref EC2RouteTable2

  EC2RouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: EC2VPC
    Properties:
      VpcId: !Ref EC2VPC
      Tags:
        - Key: Name
          Value: !Sub cloud-asm1-rtb-public2-${AWS::Region}a

  EC2Route2:
    Type: AWS::EC2::Route
    DependsOn:
      - EC2RouteTable
      - EC2VPCGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref EC2InternetGateway
      RouteTableId: !Ref EC2RouteTable


  ###########
  # Public Subnet
  ###########

  EC2Subnet:
    Type: AWS::EC2::Subnet
    DependsOn: EC2VPC
    Properties:
      VpcId: !Ref EC2VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Sub ${AWS::Region}b
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub cloud-asm1-subnet-public-${AWS::Region}b

  EC2SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - EC2RouteTable2
      - EC2Subnet
    Properties:
      RouteTableId: !Ref EC2RouteTable2
      SubnetId: !Ref EC2Subnet

  EC2Subnet2:
    Type: AWS::EC2::Subnet
    DependsOn: EC2VPC
    Properties:
      VpcId: !Ref EC2VPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: !Sub ${AWS::Region}a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub cloud-asm1-subnet-public-${AWS::Region}a

  EC2SubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - EC2RouteTable
      - EC2Subnet2
    Properties:
      RouteTableId: !Ref EC2RouteTable
      SubnetId: !Ref EC2Subnet2

  ###########
  # Security Group Ec2SecurityGroup
  ###########

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access HTTP
      GroupName: asm1-security-group
      Tags:
        - Key: Name
          Value: asm1-security-group
      VpcId: !Ref EC2VPC
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1

  EC2SecurityGroup2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and HTTP requests
      GroupName: asm1-instance-security-group
      VpcId: !Ref EC2VPC
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1

  ###########
  # SNS
  ###########

  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: asm1-sns

  SNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
      Topics:
        - !Ref SNSTopic

  SNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref SNSTopic
      Endpoint: loidpfx05556@funix.edu.com
      Protocol: email
      Region: !Ref AWS::Region

  ###########
  # Launch Template
  ###########

  EC2LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: asm1-launch-template
      LaunchTemplateData:
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash -ex
            sudo su
            dnf install httpd -y
            service httpd start
            chkconfig httpd on

            echo "<html><h1>Cloud Assignment</h1></html>" > /var/www/html/index.html
        KeyName: "vockey"
        NetworkInterfaces:
          - DeviceIndex: 0
            Groups:
              - !Ref EC2SecurityGroup2
        ImageId: !Ref AmiId
        InstanceType: t2.micro
        Monitoring:
          Enabled: true

  ###########
  # Target Group
  ###########

  ElasticLoadBalancingV2TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /index.html
      Port: 80
      Protocol: HTTP
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      UnhealthyThresholdCount: 2
      TargetType: instance
      Matcher:
        HttpCode: 200
      HealthyThresholdCount: 5
      VpcId: !Ref EC2VPC
      Name: asm1-target-group
      HealthCheckEnabled: true
      TargetGroupAttributes:
        - Key: target_group_health.unhealthy_state_routing.minimum_healthy_targets.percentage
          Value: "off"
        - Key: deregistration_delay.timeout_seconds
          Value: 300
        - Key: stickiness.type
          Value: "lb_cookie"
        - Key: stickiness.lb_cookie.duration_seconds
          Value: 86400
        - Key: slow_start.duration_seconds
          Value: 0
        - Key: stickiness.app_cookie.duration_seconds
          Value: 86400
        - Key: target_group_health.dns_failover.minimum_healthy_targets.percentage
          Value: "off"
        - Key: load_balancing.cross_zone.enabled
          Value: use_load_balancer_configuration
        - Key: load_balancing.algorithm.type
          Value: "round_robin"
        - Key: target_group_health.unhealthy_state_routing.minimum_healthy_targets.count
          Value: 1
        - Key: stickiness.enabled
          Value: "false"
        - Key: target_group_health.dns_failover.minimum_healthy_targets.count
          Value: 1
        - Key: load_balancing.algorithm.anomaly_mitigation
          Value: "off"

  ###########
  # Load Balancer
  ###########

  ElasticLoadBalancingV2LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    DependsOn:
      - ElasticLoadBalancingV2TargetGroup
      - EC2VPCGatewayAttachment
    Properties:
      Name: asm1-alb
      Scheme: internet-facing
      Type: application
      Subnets:
        - !Ref EC2Subnet
        - !Ref EC2Subnet2
      SecurityGroups:
        - !Ref EC2SecurityGroup2
      IpAddressType: ipv4
      LoadBalancerAttributes:
        - Key: access_logs.s3.enabled
          Value: false
        - Key: idle_timeout.timeout_seconds
          Value: 60
        - Key: deletion_protection.enabled
          Value: false
        - Key: routing.http2.enabled
          Value: true
        - Key: routing.http.drop_invalid_header_fields.enabled
          Value: false
        - Key: routing.http.xff_client_port.enabled
          Value: false
        - Key: routing.http.preserve_host_header.enabled
          Value: false
        - Key: routing.http.xff_header_processing.mode
          Value: append
        - Key: load_balancing.cross_zone.enabled
          Value: true
        - Key: routing.http.desync_mitigation_mode
          Value: defensive
        - Key: waf.fail_open.enabled
          Value: false
        - Key: routing.http.x_amzn_tls_version_and_cipher_suite.enabled
          Value: false
        - Key: connection_logs.s3.enabled
          Value: false

  ElasticLoadBalancingV2Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ElasticLoadBalancingV2LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - TargetGroupArn: !Ref ElasticLoadBalancingV2TargetGroup
          Type: forward

  ###########
  # Auto Scaling Group
  ###########

  AutoScalingAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: asm1-auto-scaling-group
      LaunchTemplate:
        LaunchTemplateId: !Ref EC2LaunchTemplate
        Version: !GetAtt EC2LaunchTemplate.LatestVersionNumber
      MinSize: 2
      MaxSize: 6
      DesiredCapacity: 2
      Cooldown: 300
      AvailabilityZones:
        - !GetAtt EC2Subnet.AvailabilityZone
        - !GetAtt EC2Subnet2.AvailabilityZone
      TargetGroupARNs:
        - !Ref ElasticLoadBalancingV2TargetGroup
      HealthCheckType: EC2
      HealthCheckGracePeriod: 300
      VPCZoneIdentifier:
        - !Ref EC2Subnet
        - !Ref EC2Subnet2
      TerminationPolicies:
        - Default
      ServiceLinkedRoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling
      Tags:
        - Key: Name
          Value: ASM1 Instance
          PropagateAtLaunch: true
      NewInstancesProtectedFromScaleIn: false

  AutoScalingScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref AutoScalingAutoScalingGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 60
        DisableScaleIn: false