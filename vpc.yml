AWSTemplateFormatVersion: "2010-09-09"
Metadata:
  Generator: "former2"
Description: ""
Resources:
  EC2VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: "default"
      Tags:
        - Key: "Name"
          Value: "cloud-asm1-vpc"

  EC2InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: "cloud-asm1-igw"

  EC2DHCPOptions:
    Type: "AWS::EC2::DHCPOptions"
    Properties:
      DomainName: !Sub "${AWS::Region}.compute.internal"

  EC2NetworkAcl:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      VpcId: !Ref EC2VPC

  EC2NetworkAclEntry:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      CidrBlock: "0.0.0.0/0"
      Egress: true
      NetworkAclId: !Ref EC2NetworkAcl
      Protocol: -1
      RuleAction: "allow"
      RuleNumber: 100

  EC2NetworkAclEntry2:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      CidrBlock: "0.0.0.0/0"
      Egress: false
      NetworkAclId: !Ref EC2NetworkAcl
      Protocol: -1
      RuleAction: "allow"
      RuleNumber: 100

  EC2RouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref EC2VPC
      Tags:
        - Key: "Name"
          Value: !Sub "cloud-asm1-rtb-public1-${AWS::Region}a"

  EC2RouteTable2:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref EC2VPC
      Tags:
        - Key: "Name"
          Value: !Sub "cloud-asm1-rtb-public2-${AWS::Region}b"

  EC2Route:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref EC2InternetGateway
      RouteTableId: !Ref EC2RouteTable
  
  EC2Route2:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref EC2InternetGateway
      RouteTableId: !Ref EC2RouteTable2

  EC2VPCGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref EC2InternetGateway
      VpcId: !Ref EC2VPC

  EC2Subnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref EC2VPC
      CidrBlock: "10.0.0.0/24"
      AvailabilityZone: !Sub "${AWS::Region}a"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: !Sub "cloud-asm1-subnet-public-${AWS::Region}a"

  EC2Subnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref EC2VPC
      CidrBlock: "10.0.1.0/24"
      AvailabilityZone: !Sub "${AWS::Region}b"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: !Sub "cloud-asm1-subnet-public-${AWS::Region}b"

  EC2SubnetNetworkAclAssociation:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref EC2Subnet
      NetworkAclId: !Ref EC2NetworkAcl

  EC2SubnetNetworkAclAssociation2:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref EC2Subnet2
      NetworkAclId: !Ref EC2NetworkAcl

  EC2SubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref EC2RouteTable
      SubnetId: !Ref EC2Subnet

  EC2SubnetRouteTableAssociation2:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref EC2RouteTable2
      SubnetId: !Ref EC2Subnet2

  EC2SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Access HTTP"
      GroupName: "asm1-security-group"
      Tags:
        - Key: "Name"
          Value: "asm1-security-group"
      VpcId: !Ref EC2VPC
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          FromPort: 80
          IpProtocol: "tcp"
          ToPort: 80
      SecurityGroupEgress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"

  EC2SecurityGroup2:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Allow SSH and HTTP requests"
      GroupName: "asm1-instance-sg"
      VpcId: !Ref EC2VPC
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          FromPort: 80
          IpProtocol: "tcp"
          ToPort: 80
        - CidrIp: "0.0.0.0/0"
          FromPort: 22
          IpProtocol: "tcp"
          ToPort: 22
      SecurityGroupEgress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"

  SNSTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: ""
      TopicName: "asm1-sns"

  SNSTopicPolicy:
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
      Topics:
        - !Ref SNSTopic
  SNSSubscription:
    Type: "AWS::SNS::Subscription"
    Properties:
      TopicArn: !Ref SNSTopic
      Endpoint: "loidinh.git@gmail.com"
      Protocol: "email"
      Region: !Ref AWS::Region

  EC2LaunchTemplate:
    Type: "AWS::EC2::LaunchTemplate"
    Properties:
      LaunchTemplateName: "asm1-lauch-template"
      LaunchTemplateData:
        UserData: "IyEvYmluL2Jhc2gKc3VkbyBhbWF6b24tbGludXgtZXh0cmFzIGluc3RhbGwgZXBlbCAteQp5dW0gaW5zdGFsbCBodHRwZCAteQpzZXJ2aWNlIGh0dHBkIHN0YXJ0CmNoa2NvbmZpZyBodHRwZCBvbgoKZWNobyAiPGh0bWw+PGgxPkNsb3VkIEFzc2lnbm1lbnQ8L2gxPjwvaHRtbD4iID4gL3Zhci93d3cvaHRtbC9pbmRleC5odG1s"
        KeyName: "vockey"
        NetworkInterfaces:
          - DeviceIndex: 0
            Groups:
              - !Ref EC2SecurityGroup2
        ImageId: "ami-008677ef1baf82eaf"
        InstanceType: "t2.micro"
        Monitoring:
          Enabled: true

  ElasticLoadBalancingV2TargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/index.html"
      Port: 80
      Protocol: "HTTP"
      HealthCheckPort: "traffic-port"
      HealthCheckProtocol: "HTTP"
      HealthCheckTimeoutSeconds: 5
      UnhealthyThresholdCount: 2
      TargetType: "instance"
      Matcher:
        HttpCode: "200"
      HealthyThresholdCount: 5
      VpcId: !Ref EC2VPC
      Name: "asm1-target-group"
      HealthCheckEnabled: true
      TargetGroupAttributes:
        - Key: "target_group_health.unhealthy_state_routing.minimum_healthy_targets.percentage"
          Value: "off"
        - Key: "deregistration_delay.timeout_seconds"
          Value: "300"
        - Key: "stickiness.type"
          Value: "lb_cookie"
        - Key: "stickiness.lb_cookie.duration_seconds"
          Value: "86400"
        - Key: "slow_start.duration_seconds"
          Value: "0"
        - Key: "stickiness.app_cookie.duration_seconds"
          Value: "86400"
        - Key: "target_group_health.dns_failover.minimum_healthy_targets.percentage"
          Value: "off"
        - Key: "load_balancing.cross_zone.enabled"
          Value: "use_load_balancer_configuration"
        - Key: "load_balancing.algorithm.type"
          Value: "round_robin"
        - Key: "target_group_health.unhealthy_state_routing.minimum_healthy_targets.count"
          Value: "1"
        - Key: "stickiness.enabled"
          Value: "false"
        - Key: "target_group_health.dns_failover.minimum_healthy_targets.count"
          Value: "1"
        - Key: "load_balancing.algorithm.anomaly_mitigation"
          Value: "off"
        - Key: "stickiness.app_cookie.cookie_name"
          Value: ""
